/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package MTBMS;

import databaseutility.*;
import org.junit.Test;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.PrintStream;
import java.nio.charset.StandardCharsets;
import java.util.Scanner;

import static org.junit.Assert.*;
import static org.junit.Assert.assertNotNull;

public class AppTest {
    //private static final Database dbInstance = new Database("jdbc:postgresql://ls-d4381878930280384f33af335289e24c73224a04.c0apyqxz8x8m.ap-southeast-2.rds.amazonaws.com:5432/postgres", "dbmasteruser","A>XV>D*7r-V{y_wL}}I{+U=8zEtj1*T<");
    //private static final Database dbInstance = new Database("jdbc:postgresql://localhost:5432/MTBMS", "postgres", "329099");
    private static final Database dbInstance =  new Database("jdbc:postgresql://localhost:5432/postgres", "postgres", "0000");
    private static final BookingSystem instance = new BookingSystem();
    private final ByteArrayOutputStream testOutput = new ByteArrayOutputStream();
    private final PrintStream systemOutput = System.out;
    private final InputStream systemInput = System.in;

    @BeforeEach
    public void setUpOutput() {
        System.setOut(new PrintStream(testOutput));
    }

    private String getOutput() {
        return testOutput.toString();
    }

    private void getInput(String data) {
        //sources from https://stackoverflow.com/questions/1119385/junit-test-for-system-out-println/1119559#1119559
        ByteArrayInputStream testInput = new ByteArrayInputStream(data.getBytes());
        System.setIn(testInput);
    }

    @AfterEach
    private void reset() {
        System.setIn(systemInput);
        System.setOut(systemOutput);
    }


    /*private void input(String data){

    }*/

    @Test public void getUsernameTest(){
        Guest guest = new Guest("Test", "c", "");
        assertEquals("Test", guest.getUsername());
    }

    @Test public void getIdentityTest(){
        Guest guest = new Guest("Test", "c", "");
        assertEquals("c", guest.getIdentity());
    }

    @Test public void getSettingTest(){
        Guest guest = new Guest("Test", "c", "Test");
        assertEquals("Test", guest.getSettings());
    }

    @Test public void wrongInputTest() throws InterruptedException {
        Guest.wrongInput();
        assertNotNull(getOutput());
    }

    @Test public void continueServiceTest_2() throws InterruptedException {
        getInput("2");
        Guest.getContinueService();
        assertNotNull(getOutput());
    }

    @Test public void customerHomePageTest(){
        Guest.customerHomePage();
        assertNotNull(getOutput());
    }

    @Test public void nowShowingCus(){
        Guest.nowShowingCus(dbInstance);
        assertNotNull(getOutput());
    }

    @Test public void CshowingFilterTest() throws InterruptedException {
        getInput("test");
        assertEquals("test", Guest.CshowingFilter());
    }

    @Test public void CupcomingFilterTest() throws InterruptedException {
        getInput("test");
        assertEquals("test", Guest.CupcomingFilter());
    }

    @Test public void wrongInputMsgTest(){
        Guest.wrongInputMsg();
        assertNotNull(getOutput());
    }

    @Test public void filterMsgTest() throws InterruptedException {
        Guest.filterMsg(dbInstance, "e","test");
        assertNotNull(getOutput());
    }

    @Test public void guestServiceTest_2() throws InterruptedException{
        getInput("2");

    }

    @Test
    public void greetingTest() throws InterruptedException {
        BookingSystem.getGreeting(dbInstance);
        assertNotNull(getOutput());
    }

    @Test
    public void getPaymentTypeTest_1() throws InterruptedException {
        getInput("1");
        assertEquals("1", Guest.getPaymentType());
    }

    /*@Test
    public void updateSeatsTest() throws InterruptedException {
        getInput("2" + System.lineSeparator() + "00000000000001GC");
        Guest.updateSeats("Test", "Test", "2021-10-27 18:00","silver", 1,"front");
    }*/

    @Test public void getPaymentTypeTest_2(){
        getInput("2");
        assertEquals("Wrong output","2", Guest.getPaymentType());
    }

    /*@Test public void getPaymentTypeTest_w(){
        getInput("wrong input");
        assertNotEquals("Wrong output", Guest.getPaymentType(), "wrong input");
    } */

    @Test public void checkPaymentTest_2() throws InterruptedException {
        RemovingGiftCard.removeGiftCard(dbInstance,"99999999999999GC");
        AddingGiftCard.addGiftCard(dbInstance, "99999999999999GC");
        getInput("99999999999999GC");
        assertTrue(Guest.checkPayment("2"));
        RemovingGiftCard.removeGiftCard(dbInstance,"99999999999999GC");
    }

    @Test public void checkMovieName_1() throws InterruptedException {
        RemovingMovie.removeMovie(dbInstance, "Test");
        MovieInsertionBuilder mib = new MovieInsertionBuilder(dbInstance, "Test");
        mib.insertMovie();
        getInput("Test");
        assertEquals(Guest.checkMovieName(), "Test");
    }

    /* @Test public void checkCinemaName_1() throws  InterruptedException {
        getInput("Blacktown");
        assertEquals(Guest.checkCinemaName("Ip Man"), "Blacktown");
    } */

     //debug addmoviesession
    /* @Test public void checkStartTimeTest() throws InterruptedException{
        //AddMovieSession.addMovieSession(dbInstance, 99999, "MovieTest", "CinemaTest", "silver", "2021-10-27 00:00:00", 0, 0, 0,0, 0, 0, 0, 0, 0, "2021-10-27 02:00:00" );
        getInput("2021-10-28 17:00:00");
        assertEquals("2021-10-28 17:00:00", Guest.checkStartTime("JUNGLE CRUISE", "Warringah Mall"));
    } */

    @Test public void getAudienceNumTest() throws InterruptedException {
        getInput("1");
        assertEquals(1, Guest.getAudienceNum());
    }

    @Test public void getSeatLocationTest() throws InterruptedException {
        getInput("front");
        assertEquals("front", Guest.getSeatLocation());
    }

    @Test public void getCardNumTest() throws InterruptedException{
        getInput("0000");
        assertEquals("0000", Guest.getCardNum());
    }

   @Test public void cardNumberCheckTest_r() throws  InterruptedException{
        RemovingCreditCard.removeCreditCard(dbInstance, "99999");
        AddingCreditCard.addCreditCard(dbInstance, "99999", "TestName", "0000");
        getInput("99999");
        assertTrue(Guest.cardNumberCheck());
    }

    @Test public void getCardHolderNameTest() throws InterruptedException{
        getInput("TestName");
        assertEquals("TestName", Guest.getCardHolderName());
    }

    @Test public void cardHolderNameCheckTest_r() throws InterruptedException{
        RemovingCreditCardHolderName.removeCreditCardHolderName(dbInstance, "TestName");
        AddingCreditCard.addCreditCard(dbInstance, "99999", "TestName", "0000");
        getInput("TestName");
        assertTrue(Guest.cardHolderNameCheck());
    }

    @Test public void saveCreditCardTest_1() {
        RemovingCreditCard.removeCreditCard(dbInstance, "99999");
        AddingCreditCard.addCreditCard(dbInstance, "99999", "TestName", "0000");
        getInput("1");
        Guest.saveCreditCard("Test", "9999");
    }

    /*@Test public void filterMoviesTest_U5() throws  InterruptedException{
        getInput("Town Hall");
        Guest.filterMovies("U5");
    }*/

    @Test
    public void getPaymentTypeWrongMsgTest(){
        Guest.getPaymentTypeWrongMsg();
    }

    @Test
    public void setSettingsTest(){
        Guest test = new Guest("Test", "c", "None");
        test.setSettings("Test");
        assertEquals("Test", test.getSettings());
    }

    @Test
    public void movieDetailTest() throws InterruptedException {
        Guest.movieDetail(dbInstance, "Test");
        assertNotNull(getOutput());
    }

    /*@Test
    public void bookingHelperTest() throws InterruptedException {
        getInput("1");
        Guest.bookingHelper(dbInstance);
        assertNotNull(getOutput());
    }*/

    /*@Test
    public void filterMovieTest1() throws InterruptedException {
        getInput("1");
        Guest.filterMovies(dbInstance,"U5");
        assertNotNull(getOutput());
    }

    @Test
    public void filterMovieTest2() throws InterruptedException {
        getInput("1");
        Guest.filterMovies(dbInstance,"U6");
        assertNotNull(getOutput());
    }

    @Test
    public void filterMovieTest2p2() throws InterruptedException {
        getInput("2");
        Guest.filterMovies(dbInstance,"U6");
        assertNotNull(getOutput());
    }

    @Test
    public void filterMovieTest2p3() throws InterruptedException {
        getInput("3");
        Guest.filterMovies(dbInstance,"U6");
        assertNotNull(getOutput());
    }


    @Test
    public void filterMovieTest3() throws InterruptedException {
        getInput("1");
        Guest.filterMovies(dbInstance,"S5");
        assertNotNull(getOutput());
    }

    @Test
    public void filterMovieTest4() throws InterruptedException {
        getInput("1");
        Guest.filterMovies(dbInstance,"S6");
        assertNotNull(getOutput());
    }

    @Test
    public void filterMovieTest4p2() throws InterruptedException {
        getInput("2");
        Guest.filterMovies(dbInstance,"S6");
        assertNotNull(getOutput());
    }

    @Test
    public void filterMovieTest4p3() throws InterruptedException {
        getInput("3");
        Guest.filterMovies(dbInstance,"S6");
        assertNotNull(getOutput());
    }

    @Test
    public void filterMovieTest5() throws InterruptedException {
        Guest.filterMovies(dbInstance,"S");
        assertNotNull(getOutput());
    }*/

}


