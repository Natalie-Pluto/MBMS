This file describes the tests for the classes in the databaseutility package
The line format of the test descriptions: <<databaseutility class>_<number>> <description>

AddingUser_1 Adding a user with a username which does not already exist
AddingUser_2 Attempting to add a user with a username which already exist does not cause error

RemovingUser_1 Attempting to remove a user which does not exist does not cause error
RemovingUser_2 Removing a user which exists

CheckStaff_1 checking if a user which is a staff member is a staff member
CheckStaff_2 checking if a user which exists and is not a staff member is not a staff member
CheckStaff_3 Checking if a user which does not exist is not a staff member.

DirectorChanger_1 changing directors of a movie that exists 
DirectorChanger_2 attempting to change the director of a movie that does not exist does not cause error.

MovieClassificationChanger_1 Changing movie classification to a valid classification
MovieClassificationChanger_2 Changing movie classification to an invalid classification does not change classification
MovieClassificationChanger_3 Attempting to change the movie classification of a movie that does not exist does not cause error.

MovieInsertionBuilder_1 Attempting to insert a movie without classification
MovieInsertionBuilder_2 Inserting a movie with classification, release date, synopsis and directors
MovieInsertionBuilder_3 Inserting a movie with classifcation, release date, synopsis but without directors
MovieInsertionBuilder_4 Inserting a movie with classifcation and release date and directors but without synopsis
MovieInsertionBuilder_5 Inserting a movie with classifcation and release date but without directors or synopsis
MovieInsertionBuilder_6 Inserting a movie with classifcation, synopsis and directors but without release date
MovieInsertionBuilder_7 Inserting a movie with classifcation an synopsis but without release date or directors
MovieInsertionBuilder_8 Inserting a movie with classifcation and directors but without release date or synopsis
MovieInsertionBuilder_9 Inserting a movie with classifcation without directors, release date or synopsis

AddingCinema_1 adding a cinema with a name that does not already exist
AddingCinema_2 attempting to add a cinema with a name that already exists should not cause issues

AddingCreditCard_1 adding a credit card with a credit card number that does not exist 
AddingCreditCard_2 adding a credit card with a credit card number that does exist should not cause issues

AddingGiftCard_1 adding a gift card with a gift card number that does not exist 
AddingGiftCard_2 adding a gift card with a gift card number that does exist should not cause issues

AddingUpcomingMovie_1 : TODO (more difficult to test this class)

AddMovieSession_1 Inserting a session with a session id that does not already occur in the database
AddMovieSession_2 Inserting a session with a session id that does not already exist in the database should not cause issues

ChangeSeatCapacity_1 Attempt to change cinema capacity with a parameter combination that does not map to a unique session
ChangeSeatCapacity_2 Changing the seat capacity with a parameter combination that maps to a unique session works 

ChangingCreditCardBalance_1 changing the balance on a credit card that exists works
ChangingCreditCardBalance_2 attempting the change the balance of a credit card that does not exist does not cause issues

ChangingIdentity_1 changing the identity of a user that exists works
ChangingIdentity_2 attempting the change the identity of a user that does not exist does not cause issues

ChangingUserPassword_1 changing the user password of a user that exists works
ChangingUserPassword_2 attempting the change the password of a user that does not exist does not cause issues

CheckIfMovieExists_1 checking if a movie that exists, exists
CheckIfMovieExists_2 checking if a movie that does not exist, does not exist

CheckIfUserExists_1 checking if a user exists, exists
CheckingIfUserExists_2 checking if a user does not exist, does not exist

DeleteAllUpcoming_1 checking that all entries in the table for upcoming movies are deleted

FilterCinema_1 (todo)

FilterScreenSize_1 (todo)

GetEndTime_1 the end time of a session that exists can be retrieved
GetEndTime_2 attempting to get the end time of a session that does not exist does not cause issues

GetMovieCast_1 the movie cast of a session that exists can be retrieved
GetMovieCast_2 attempting to get the movie cast of a session that does not exist does not cause issues

GetMovieClassification_1 the classification of a movie that exists can be retrieved
GetMovieClassification_2 attempting to get the classification of a movie that does not exist does not cause issues

GetMovieDirectors_1 the directors of a session that exists can be retrieved
GetMovieDirectors_2 attempting to get the director of a session that does not exist does not cause issues

GetMovieNames_1 attempting to get the names of all the movies in the database does not cause issues

GetMovieReleaseDate_1 the release of a session that exists can be retrieved
GetMovieReleaseDate_2 attempting to get the release of a movie that does not exist does not cause issues

GetMovieScreenSize_1 attempting to get the screen size of a session does not cause issues

GetMovieShowDate_1 the show date of a movie that exists can be retrieved
GetMovieShowDate_2 attempting to get the show date of a movie that does not exist does not cause issues

GetMovieShowingTime_1 attempting to get the showing times of a movie at a particular cinema does not cause issues

GetMovieSynopsis_1 the synopsis of a movie that exists can be retrieved
GetMovieSynopsis_2 attempting to get the synopsis of a movie that does not exist does not cause issues

GetNewUpcomingMovie_1 attempting to get a list of upcoming movies does not cause issues

GetNowShowing_1 attempting to get a list of the currently showing movies does not cause issues

GetStartTime_1 the start time of a session that exists can be retrieved 
GetStartTime_2 attempting to get the start time of a session that does not exist does not cause issues

GetTicketPrice_kids_1 the kids ticket price of a session that exists can be retrieved
GetTicketPrice_kids_2 attempting to get the ticket price of a session that does not exist does not cause issues

GetTicketPrice_adults_1 the adults ticket price of a session that exists can be retrieved
GetTicketPrice_adults_2 attempting to get the ticket price of a session that does not exist does not cause issues

GetTicketPrice_students_1 the students ticket price of a session that exists can be retrieved
GetTicketPrice_students_2 attempting to get the ticket price of a session that does not exist does not cause issues

GetUpcomingMovies_1 attempting to get upcoming movies does not cause issues

MovieNameChanger_1 the name of a movie that exists can be changed
MovieNameChanger_2 attempting to change the name of a movie that does not exist does not cause issues

MoviesCounter_1 attempting to get the number of movies in the database does not cause issues

RedeemedCheck_1 the redeemed status of a gift card that exists can be retrieved
RedeemedCheck_2 attempting to get the redeemed status of a gift card that does not exist does not cause issues

RedeemingGiftCard_1 a gift card that exists can be redeemed
RedeemingGiftCard_2 attempting to redeem a gift card that does not exist does not cause issues

ReleaseDateChanger_1 the release date of a movie that exists can be changed
ReleaseDateChanger_2 attempting to change the release date of a movie that does not exist does not cause issues

RemovingCinema_1 a cinema that exists can be removed
RemovingCinema_2 attempting to remove a cinema that does not exist does not cause issues

RemovingCreditCard_1 a credit card that exists can be removed
RemovingCreditCard_2 attempting to remove a credit card that does not exist does not cause issues

RemovingGiftCard_1 a gift card that exists can be removed
RemovingGiftCard_2 attempting to remove a gift card that does not exist does not cause issues

RemovingMovie_1 a movie that exists can be removed
RemovingMovie_2 attemptnig to remove a movie that does not exist does not cause issues



// ignore anything under this comment

F. Inserting movies and removing movies
F1. Inserting a movie with no classification should not work
F2. Inserting a movie with classification
F3. Removing a movie that exists
F4. Attempting to remove a movie that does not exist should not cause error

G. Changing movie's name
G1. changing existing movie's named
G2. changing name of a movie that does not exist

H. Displaying movie names
H1. Movies are displayed as required

I. Displaying the number of movies in the database
I1. The correct number of movies is returned

J. Changing the release date of a movie
J1. The release date of an existing movie can be changed
J2. No error occurs for an attempt at changing the release date of a movie that does not exist 

K. Changing the synopsis of a movie
K1. No error occurs for an attempt at changing the synopsis of a movie that does not exist.
K2. The synopsis of an existing movie can be changed

L. user authentication
L1. No error occurs for an attempt at user authentication for a user that does not exist
L2. Authentication works a user that exists